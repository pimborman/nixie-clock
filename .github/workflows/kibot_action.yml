name: "automatic kibot generation and deployment"

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  KIBOT_OUTPUT_NAME: "kibot-${{ github.event.repository.name }}-${{ github.ref_name }}"  # Define the build output name

jobs:
  cicd:
    name: "KiBot (action)"
    runs-on: ubuntu-latest

    outputs:
      kibot_url: ${{ steps.kibot_release.outputs.browser_download_url }}  # download url
    
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    
    - name: Run KiBot
      uses: INTI-CMNB/KiBot@v2_k8
      with:
        config: .kibot/nixie.kibot.yaml # Required - kibot config file
        dir: output # optional - prefix to output defined in config
        schema: 'nixie.kicad_sch' # optional - schematic file
        board: 'nixie.kicad_pcb' # optional - PCB design file
        install3D: YES
    
    - name: Zip the KiBot output
      run: cd output && zip -r "../${{ env.KIBOT_OUTPUT_NAME }}.zip" ./* && cd ..
   
    - name: Make a release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        make_latest: true
        generate_release_notes: true
    
    - name: Upload KiBot archive as release asset
      id: kibot_release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ${{ env.KIBOT_OUTPUT_NAME }}.zip
        asset_name: ${{ env.KIBOT_OUTPUT_NAME }}.zip
        asset_content_type: application/zip
    
# This step is to upload the results to the gh-pages branche and publish the page
  deploy:
    runs-on: ubuntu-latest
    needs: cicd
    
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Download the kibot archive
        id: kibot_download
        run: |          
          # Extract the URL for the specific asset
          curl -L -o "${{ env.KIBOT_OUTPUT_NAME }}.zip" "${{ needs.cicd.outputs.kibot_url }}"

      - name: Unzip the downloaded asset
        run: mkdir -p kibot_output && unzip -o "${{ env.KIBOT_OUTPUT_NAME }}.zip" -d kibot_output

      - name: Disable Jekyll
        run: touch kibot_output/.nojekyll # Jekyll will filter the KiRi folders

      - name: Deploy the kibot folder
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: kibot_output
